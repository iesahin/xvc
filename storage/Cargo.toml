[package]
name = "xvc-storage"
version = "0.6.8"
edition = "2021"
description = "Xvc remote and local storage management"
authors = ["Emre Åžahin <contact@emresahin.net>"]
license = "GPL-3.0"
homepage = "https://xvc.dev"
repository = "https://github.com/iesahin/xvc"
categories = ["command-line-utilities", "development-tools"]
keywords = ["file", "devops", "git", "versioning", "mlops"]


[lib]
name = "xvc_storage"
crate-type = ["rlib"]

[profile.release]
debug = true


[dependencies]
xvc-logging = { version = "0.6.8", path = "../logging" }
xvc-config = { version = "0.6.8", path = "../config" }
xvc-core = { version = "0.6.8", path = "../core" }
xvc-ecs = { version = "0.6.8", path = "../ecs" }
xvc-walker = { version = "0.6.8", path = "../walker" }

## Cli and config
clap = { version = "^4.4", features = ["derive"] }
directories-next = "2.0"

## Hashing
seahash = "^4.1"
byteorder = "^1.5"
blake3 = "^1.5"
blake2 = "0.10.6"
sha2 = "0.10.8"
sha3 = "0.10.8"

## Serialization
serde = { version = "^1.0", features = ["derive"] }
serde_yaml = "^0.9"
serde_json = "^1.0"
rmp = "^0.8"
rmp-serde = "1.1.2"
toml = "^0.8"

## Parallelization
rayon = "^1.8"
crossbeam-channel = "^0.5"
crossbeam = "^0.8"

## File system
jwalk = "^0.8"
walkdir = "^2.4"
relative-path = { version = "^1.9", features = ["serde"] }
path-absolutize = "^3.1"
glob = "^0.3"
which = "^4.4"

## Logging and errors
thiserror = "^1.0"
log = "^0.4"
anyhow = "^1.0"
### meta-logging-in-format is required for sled: https://github.com/spacejam/sled/issues/1384
fern = { version = "^0.6", features = ["colored"] }


## macros
paste = "1.0"

## Misc
humantime = "^2.1"
subprocess = "^0.2"
regex = "^1.10"
strum = "0.25.0"
strum_macros = "0.25.3"
lazy_static = "^1.4"
uuid = { version = "^1.6", features = ["serde", "v4", "fast-rng"] }
hex = { version = "^0.4", features = ["serde"] }
url = { version = "^2.5", features = ["serde"] }
itertools = "^0.12"
derive_more = "^0.99"
tempfile = "^3.9"

## Networking & Async


tokio = { version = "^1.35", optional = true, features = ["rt-multi-thread"] }
rust-s3 = { version = "^0.33", optional = true }
futures = { version = "^0.3", optional = true }

# Although we don't use openssl directly, we use its vendored version for cross compilation
# Cannot compile on Windows with vendored
[target.'cfg(target_os = "linux")'.dependencies]
openssl = { version = "^0.10", features = ["vendored"] }


[features]
default = ["s3", "minio", "gcs", "wasabi", "r2", "digital-ocean"]
async = ["dep:rust-s3", "dep:futures", "dep:tokio"]
s3 = ["async"]
minio = ["async"]
gcs = ["async"]
wasabi = ["async"]
r2 = ["async"]
digital-ocean = ["async"]


[dev-dependencies]
xvc-test-helper = { version = "0.6.8", path = "../test_helper/" }
shellfn = "^0.1"

[package.metadata.cargo-udeps.ignore]
normal = ["futures"]
